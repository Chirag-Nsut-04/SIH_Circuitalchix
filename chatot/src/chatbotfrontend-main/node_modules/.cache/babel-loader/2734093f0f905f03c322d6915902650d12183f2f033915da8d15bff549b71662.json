{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHIRAG\\\\OneDrive\\\\Desktop\\\\Tech Interview prep\\\\web\\\\chatbot\\\\chatbot\\\\chatbotfrontend-main\\\\src\\\\chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [message, setMessage] = useState(''); // To hold the user input\n  const [conversation, setConversation] = useState([]); // To hold the conversation history\n\n  // Function to send the message to the backend\n  const handleSendMessage = async () => {\n    if (message.trim()) {\n      // Update the conversation state with the user's message\n      setConversation([...conversation, {\n        sender: 'user',\n        text: message\n      }]);\n      try {\n        // Send the message to the Node.js backend\n        const res = await axios.post('https://backendchatbot-mpsk.onrender.com/webhook', {\n          message\n        });\n\n        // Update the conversation with the bot's response\n        const botResponse = res.data.fulfillmentText;\n        setConversation([...conversation, {\n          sender: 'user',\n          text: message\n        }, {\n          sender: 'bot',\n          text: botResponse\n        }]);\n\n        // Clear the input field\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setConversation([...conversation, {\n          sender: 'user',\n          text: message\n        }, {\n          sender: 'bot',\n          text: 'Error communicating with the bot.'\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '0 auto',\n      padding: '20px',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"ChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        overflowY: 'auto',\n        marginBottom: '10px',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'user' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender === 'user' ? 'You' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 16\n          }, this), \" \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message\",\n      style: {\n        width: 'calc(100% - 50px)',\n        padding: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      style: {\n        padding: '10px',\n        width: '50px'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"wXnHTkZ/OFFj7TJrDRakOekhQ98=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","conversation","setConversation","handleSendMessage","trim","sender","text","res","post","botResponse","data","fulfillmentText","error","console","style","maxWidth","margin","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","marginBottom","map","msg","index","textAlign","type","value","onChange","e","target","placeholder","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CHIRAG/OneDrive/Desktop/Tech Interview prep/web/chatbot/chatbot/chatbotfrontend-main/src/chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatBot = () => {\r\n  const [message, setMessage] = useState(''); // To hold the user input\r\n  const [conversation, setConversation] = useState([]); // To hold the conversation history\r\n\r\n  // Function to send the message to the backend\r\n  const handleSendMessage = async () => {\r\n    if (message.trim()) {\r\n      // Update the conversation state with the user's message\r\n      setConversation([...conversation, { sender: 'user', text: message }]);\r\n\r\n      try {\r\n        // Send the message to the Node.js backend\r\n        const res = await axios.post('https://backendchatbot-mpsk.onrender.com/webhook', { message });\r\n\r\n        // Update the conversation with the bot's response\r\n        const botResponse = res.data.fulfillmentText;\r\n        setConversation([...conversation, { sender: 'user', text: message }, { sender: 'bot', text: botResponse }]);\r\n\r\n        // Clear the input field\r\n        setMessage('');\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n        setConversation([...conversation, { sender: 'user', text: message }, { sender: 'bot', text: 'Error communicating with the bot.' }]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '0 auto', padding: '20px', border: '1px solid #ccc' }}>\r\n      <h3>ChatBot</h3>\r\n      <div style={{ height: '300px', overflowY: 'auto', marginBottom: '10px', border: '1px solid #ccc', padding: '10px' }}>\r\n        {/* Render the conversation history */}\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'user' ? 'right' : 'left' }}>\r\n            <p><strong>{msg.sender === 'user' ? 'You' : 'Bot'}:</strong> {msg.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input box for typing message */}\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type your message\"\r\n        style={{ width: 'calc(100% - 50px)', padding: '10px' }}\r\n      />\r\n      <button onClick={handleSendMessage} style={{ padding: '10px', width: '50px' }}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}